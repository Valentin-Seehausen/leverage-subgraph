type Position @entity {
  id: ID! # positionId
  trader: Trader!
  collateral: BigInt! # uint256
  shares: BigInt! # uint256
  leverage: BigInt! # uint256
  isLong: Boolean! # bool
  entryPrice: BigInt! # uint256
  liquidationPrice: BigInt! # uint256
  takeProfitPrice: BigInt! # uint256
  openDate: BigInt! # uint256
  openTransactionHash: Bytes!
  closePrice: BigInt # uint256
  closeDate: BigInt # uint256
  closeTransactionHash: Bytes
  pnl: BigInt # int256
  isOpen: Boolean! 
}

type Trader @entity {
  id: ID!
  positions: [Position!]! @derivedFrom(field: "trader")
}

type TradePair @entity {
  id: ID!
  longCollateral: BigInt! # uint256
  shortCollateral: BigInt! # uint256
  longShares: BigInt! # uint256
  shortShares: BigInt! # uint256
  longPositionCount: BigInt! # uint256
  shortPositionCount: BigInt! # uint256
}

type Protocol @entity {
  id: ID!
  totalShares: BigInt! # uint256
}