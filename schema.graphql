type Position @entity {
  id: ID! # positionId
  trader: Trader!
  isOpen: Boolean! 
  isLong: Boolean! 
  leverage: BigInt! 
  
  collateral: BigInt! 
  shares: BigInt! 

  entryPrice: BigInt! 
  liquidationPrice: BigInt! 
  takeProfitPrice: BigInt! 
  minClosePrice: BigInt! 
  maxClosePrice: BigInt! 
  closePrice: BigInt 

  openDate: BigInt! 
  openTransactionHash: Bytes!
  closeDate: BigInt 
  closeTransactionHash: Bytes
  pnlAssets: BigInt 
  pnlAssetsPercentage: BigDecimal
  pnlShares: BigInt 
  pnlSharesPercentage: BigDecimal 
}

type Trader @entity {
  id: ID!
  positions: [Position!]! @derivedFrom(field: "trader")
}

type TradePair @entity {
  id: ID!
  longCollateral: BigInt! 
  shortCollateral: BigInt! 
  longShares: BigInt! 
  shortShares: BigInt! 
  longPositionCount: BigInt! 
  shortPositionCount: BigInt! 

  protocol: Protocol
  liquidityPool: LiquidityPool
}

type Protocol @entity {
  id: ID!
  totalShares: BigInt! 
}

type LiquidityPool @entity {
  id: ID!
  shares: BigInt! 
  openInterestShares: BigInt! 
  assets: BigInt! 

  protocol: Protocol
}